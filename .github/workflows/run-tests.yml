# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]

    paths:
      - mythicinfinity/**
      - test/**
      - .github/**

#  pull_request:
#    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
#  linter:
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: [3.8]
#        os: [ubuntu-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install project
#        run: make install
#      - name: Run linter
#        run: make lint

  tests_linux:
    environment: 'live api tests'
#    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pip
        run: pip install --user --upgrade pip
      - name: Install project
        run: pip install -e .[test]
      - name: run tests
        run: pytest -n 1 -vvvv -l --tb=long test --junitxml=junit/test-results_linux.xml
        env:
          MYTHICINFINITY_API_KEY: ${{ secrets.MYTHICINFINITY_API_KEY }}

  tests_mac:
    environment: 'live api tests'
#    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pip
        run: pip install --user --upgrade pip
      - name: Install project
        run: pip install -e .[test]
      - name: run tests
        run: pytest -n 1 -vvvv -l --tb=long test --junitxml=junit/test-results_mac.xml
        env:
          MYTHICINFINITY_API_KEY: ${{ secrets.MYTHICINFINITY_API_KEY }}

  tests_win:
    environment: 'live api tests'
#    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pip
        run: python -m pip install --user --upgrade pip
      - name: Install project
        run: pip install -e .[test]
      - name: run tests
        run: pytest -n 1 -vvvv -l --tb=long test --junitxml=junit/test-results_windows.xml
        env:
          MYTHICINFINITY_API_KEY: ${{ secrets.MYTHICINFINITY_API_KEY }}